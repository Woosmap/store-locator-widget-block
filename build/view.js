(()=>{"use strict";var e={n:t=>{var i=t&&t.__esModule?()=>t.default:()=>t;return e.d(i,{a:i}),i},d:(t,i)=>{for(var o in i)e.o(i,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:i[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.domReady;var i=e.n(t);const o=window.wp.data,r={theme:{primary_color:"#000"},datasource:{max_responses:5,max_distance:5e4},internationalization:{lang:"en",period:"fr",unitSystem:0},maps:{apiKey:"",provider:"woosmap"},woosmapView:{initialCenter:{lat:50,lng:0},initialZoom:13,tileStyle:{color:"#000",size:11,minSize:5,typeRules:[]},breakPoint:10,style:{rules:[],default:{icon:{url:"https://images.woosmap.com/marker-default.svg"},selectedIcon:{url:"https://images.woosmap.com/marker-selected.svg"},numberedIcon:{url:"https://images.woosmap.com/marker-default.svg"}}}}};function a(e,t){return Object.keys(t).forEach((i=>{Array.isArray(t[i])?e[i]=t[i]:t[i]&&"object"==typeof t[i]?(e[i]||(e[i]={}),a(e[i],t[i])):e[i]=t[i]})),e}function s(e,t={}){try{return a(t,JSON.parse(e))}catch(e){return(0,o.dispatch)("core/notices").createErrorNotice(`Error parsing conf: ${e.message}`,{isDismissible:!0,type:"snackbar"}),t}}class n{constructor(e){this.element=e,this.storeLocatorConfig={},this.webAppLib=e.ownerDocument.defaultView.WebApp,this.webAppLib&&this.element.dataset.apiKey&&this.init()}init(){this.createStoreLocatorWidget()}createStoreLocatorWidget(){const e=function(e){const{filters:t="{}",theme:i="{}",datasource:o="{}",internationalization:a="{}",woosmapView:n="{}",apiKey:l}=e,c=s(n,r.woosmapview);return{theme:s(i,r.theme),datasource:s(o,r.datasource),internationalization:s(a,r.internationalization),maps:{apiKey:l,provider:"woosmap"},woosmapview:{...c,initialCenter:c.initialCenter,initialZoom:c.initialZoom,tileStyle:{color:c.tileStyle.color,size:Number(c.tileStyle.size),minSize:Number(c.tileStyle.minSize),typeRules:c.tileStyle.typeRules},breakPoint:Number(c.breakPoint),style:{rules:c.style.rules,default:c.style.default}},filters:s(t,{})}}(this.element.dataset);this.storeLocatorConfig=function(e){if(!e.maps.apiKey||"string"!=typeof e.maps.apiKey||!e.maps.apiKey.trim())throw new Error("StoreLocator configuration error: apiKey is required and must be a non-empty string.");return e}(e),this.element.innerHTML="";const t=document.createElement("div");t.style="width:100%; height:100%",t.id="store-locator-widget-id",this.element.appendChild(t),this.storeLocatorWidget=new this.webAppLib(t.id,this.storeLocatorConfig.maps.apiKey),this.storeLocatorWidget.isMobile=!1,this.storeLocatorWidget.setConf(this.storeLocatorConfig),this.storeLocatorWidget.render()}}i()((async()=>{const e=document.querySelector(".wp-block-woosmap-store-locator-widget-block");e&&new n(e)}))})();